{
	"openapi": "3.0.0",
	"info": {
		"title": "Pizzas API",
		"version": "1.0.0",
		"description": "API for managing pizzas"
	},
	"servers": [
		{
			"url": "https://localhost:3000",
			"description": "Development server"
		}
	],
	"paths": {
		"/ingredients": {
			"get": {
				"summary": "Get all ingredients",
				"responses": {
					"200": {
						"description": "List of ingredients",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Ingredient"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a new ingredient",
				"requestBody": {
					"description": "Ingredient object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/IngredientDTO"
										}
									},
									{
										"$ref": "#/components/schemas/IngredientDTO"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully created a new ingredient",
						"content": {
							"application/json": {
								"schema": {
									"oneOf": [
										{
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Ingredient"
											}
										},
										{
											"$ref": "#/components/schemas/Ingredient"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/ingredients/{id}": {
			"get": {
				"summary": "Get a single ingredient by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the ingredient",
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successfully retrieved an ingredient",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Ingredient"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update an ingredient by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the ingredient",
						"schema": {
							"type": "integer"
						}
					}
				],
				"requestBody": {
					"description": "Updated ingredient object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IngredientDTO"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully updated the ingredient",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Ingredient"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an ingredient by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the ingredient",
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successfully deleted the ingredient"
					},
					"404": {
						"description": "Ingredient not found"
					}
				}
			}
		},
		"/pizzas": {
			"get": {
				"summary": "Get all pizzas",
				"responses": {
					"200": {
						"description": "List of pizzas",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Pizza"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a new pizza",
				"requestBody": {
					"description": "Pizza object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/PizzaDTO"
										}
									},
									{
										"$ref": "#/components/schemas/PizzaDTO"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully created a new pizza",
						"content": {
							"application/json": {
								"schema": {
									"oneOf": [
										{
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Pizza"
											}
										},
										{
											"$ref": "#/components/schemas/Pizza"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/pizzas/search": {
			"get": {
				"summary": "Search for a pizza",
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"required": false,
						"description": "Name of the pizza",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "description",
						"in": "query",
						"required": false,
						"description": "Description of the pizza",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "ingredients",
						"in": "query",
						"required": false,
						"description": "ingredients (ids) found in the pizza",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "price",
						"in": "query",
						"required": false,
						"description": "Price of the pizza",
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The pizzas found",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Pizza"
									}
								}
							}
						}
					}
				}
			}
		},
		"/pizzas/{id}": {
			"get": {
				"summary": "Get a single pizza by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the pizza",
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successfully retrieved a pizza",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pizza"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update a pizza by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the pizza",
						"schema": {
							"type": "integer"
						}
					}
				],
				"requestBody": {
					"description": "Updated pizza object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Pizza"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully updated the pizza",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pizza"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a pizza by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the pizza",
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successfully deleted the pizza"
					}
				}
			}
		},
		"/pizzas/{id}/like": {
			"post": {
				"summary": "Like a pizza",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the pizza",
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successfully liked the pizza",
						"content": {
							"application/json": {
								"schema": {
									"oneOf": [
										{
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Pizza"
											}
										},
										{
											"$ref": "#/components/schemas/Pizza"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/clients": {
			"get": {
				"summary": "Get all clients",
				"responses": {
					"200": {
						"description": "List of clients",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Client"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a new client",
				"requestBody": {
					"description": "Client object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/ClientDTO"
										}
									},
									{
										"$ref": "#/components/schemas/ClientDTO"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully created a new client",
						"content": {
							"application/json": {
								"schema": {
									"oneOf": [
										{
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Client"
											}
										},
										{
											"$ref": "#/components/schemas/Client"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/clients/{id}": {
			"get": {
				"summary": "Get a single client by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the client",
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successfully retrieved a client",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Client"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update a client by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the client",
						"schema": {
							"type": "integer"
						}
					}
				],
				"requestBody": {
					"description": "Updated client object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Client"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully updated the pizza",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Client"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a client by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the client",
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successfully deleted the client"
					}
				}
			}
		},
		"/orders": {
			"get": {
				"summary": "Get all orders",
				"responses": {
					"200": {
						"description": "List of orders",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Order"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a new order",
				"requestBody": {
					"description": "Order object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"type": "array",
										"items": {
											"$ref": "#/components/schemas/OrderDTO"
										}
									},
									{
										"$ref": "#/components/schemas/OrderDTO"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully created a new order",
						"content": {
							"application/json": {
								"schema": {
									"oneOf": [
										{
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Order"
											}
										},
										{
											"$ref": "#/components/schemas/Order"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/orders/{id}": {
			"get": {
				"summary": "Get a single order by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the order",
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successfully retrieved a order",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Order"
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update an order by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the order",
						"schema": {
							"type": "integer"
						}
					}
				],
				"requestBody": {
					"description": "Updated order object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Order"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successfully updated the order",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Order"
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an order by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"description": "ID of the order",
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successfully deleted the order"
					}
				}
			}
		},
		"/orders/search": {
			"get": {
				"summary": "Search for an order",
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"required": false,
						"description": "id of the order",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "pizzas",
						"in": "query",
						"required": false,
						"description": "Pizzas (id) found in the order",
						"schema": {
							"type": "number"
						}
					},
					{
						"name": "client",
						"in": "query",
						"required": false,
						"description": "Client (id) for the order",
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The orders found",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Order"
									}
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"Pizza": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64",
						"description": "ID of the pizza"
					},
					"name": {
						"type": "string",
						"description": "Name of the pizza"
					},
					"description": {
						"type": "string",
						"description": "Description of the pizza"
					},
					"price": {
						"type": "number",
						"format": "float",
						"description": "Price of the pizza"
					},
					"likes": {
						"type": "number",
						"format": "int64",
						"description": "Number of likes for the pizza"
					},
					"ingredients": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Ingredient"
						},
						"description": "List of ingredients for the pizza"
					}
				}
			},
			"PizzaDTO": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Name of the pizza"
					},
					"description": {
						"type": "string",
						"description": "Description of the pizza"
					},
					"price": {
						"type": "number",
						"format": "float",
						"description": "Price of the pizza"
					},
					"ingredients": {
						"type": "array",
						"items": {
							"type": "number"
						},
						"description": "List of ingredients ids for the pizza"
					}
				}
			},
			"Ingredient": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64",
						"description": "ID of the ingredient"
					},
					"name": {
						"type": "string",
						"description": "Name of the ingredient"
					}
				}
			},
			"IngredientDTO": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Name of the ingredient"
					}
				}
			},
			"Order": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64",
						"description": "ID of the order"
					},
					"pizzas": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Pizza"
						},
						"description": "Pizzas in the order"
					},
					"client": {
						"$ref": "#/components/schemas/Client",
						"description": "The client for the order"
					}
				}
			},
			"OrderDTO": {
				"type": "object",
				"properties": {
					"pizzas": {
						"type": "array",
						"items": {
							"type": "number"
						},
						"description": "Array of ids of pizzas in the order"
					},
					"client": {
						"type": "number",
						"description": "The client for the order"
					}
				}
			},
			"Client": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64",
						"description": "ID of the client"
					},
					"name": {
						"type": "string",
						"description": "Name of the client"
					},
					"lastname": {
						"type": "string",
						"description": "Lastname of the client"
					},
					"address": {
						"type": "string",
						"description": "Address of the client"
					}
				}
			},
			"ClientDTO": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Name of the client"
					},
					"lastname": {
						"type": "string",
						"description": "Lastname of the client"
					},
					"address": {
						"type": "string",
						"description": "Address of the client"
					}
				}
			}
		}
	}
}
